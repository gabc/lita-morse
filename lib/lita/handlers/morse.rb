# coding: utf-8
module Lita
  module Handlers
    class Morse < Handler
      route(/^morse\s(?<text>.*)/, :morse, command: true)

      def morse(r)
        r.reply(r.match_data[:text].split(//).map{|c| MorseHash[c]}.join(" "))
      end

      MorseHash = {"a" => "·−",
                   "b" => "−···", 
                   "c" => "−·−·", 
                   "d" => "−··", 
                   "e" => "·", 
                   "f" => "··−·", 
                   "g" => "−−·", 
                   "h" => "····", 
                   "i" => "··", 
                   "j" => "·−−−", 
                   "k" => "−·−", 
                   "l" => "·−··", 
                   "m" => "−−", 
                   "n" => "−·", 
                   "o" => "−−−", 
                   "p" => "·−−·", 
                   "q" => "−−·−", 
                   "r" => "·−·", 
                   "s" => "···", 
                   "t" => "−", 
                   "u" => "··−", 
                   "v" => "···−", 
                   "w" => "·−−", 
                   "x" => "−··−", 
                   "y" => "−·−−", 
                   "z" => "−−··", 
                   "é" => "··−··", 
                   "è" => "·−··−", 
                   "à" => "·−−·−", 
                   " " => " ", 
                   "ç" => "−·−··", 
                   "." => "·−·−·−", 
                   "," => "−−··−−", 
                   "?" => "··−−··", 
                   ";" => "−·−·−·", 
                   ":" => "−−−···", 
                   "!" => "−·−·−−",
                   ")" => "−·−−·−", 
                   "(" => "−·−−·", 
                   "0" => "−−−−−",
                   "1" => "·−−−−", 
                   "2" => "··−−−", 
                   "3" => "···−−", 
                   "4" => "····−", 
                   "5" => "·····", 
                   "6" => "−····", 
                   "7" => "−−···", 
                   "8" => "−−−··", 
                   "9" => "−−−−·"
                  }

      Lita.register_handler(self)
    end
  end
end
